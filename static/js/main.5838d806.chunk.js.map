{"version":3,"sources":["App.js","reportWebVitals.js","index.js"],"names":["api","App","useState","query","setQuery","weather","setWeather","className","main","temp","type","placeholder","onChange","e","target","value","onKeyPress","evt","key","fetch","then","res","json","result","console","log","name","sys","country","d","day","getDay","date","getDate","month","getMonth","year","getFullYear","dateBuilder","Date","Math","round","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"sMAIMA,EACC,mCADDA,EAEE,2CAuEOC,MApEf,WAAgB,IAAD,EACaC,mBAAS,IADtB,mBACNC,EADM,KACCC,EADD,OAEiBF,mBAAS,IAF1B,mBAENG,EAFM,KAEGC,EAFH,KA8Bf,OAEE,sBAAKC,UAAmC,oBAAhBF,EAAQG,KAA0BH,EAAQG,KAAKC,KAAO,GAAM,OAAS,OAAW,MAAxG,UAEI,sBAAKF,UAAU,UAAf,yBACgB,cAAC,IAAD,OAEjB,qBAAKA,UAAU,aAAf,SACE,uBAAOG,KAAK,OAAOH,UAAU,aAAaI,YAAY,oBACtDC,SAAU,SAAAC,GAAC,OAAIT,EAASS,EAAEC,OAAOC,QACjCA,MAAOZ,EACPa,WAtCU,SAAAC,GACG,UAAZA,EAAIC,KACNC,MAAM,GAAD,OAAInB,EAAJ,qBAAyBG,EAAzB,+BAAqDH,IACvDoB,MAAK,SAAAC,GAAG,OAAIA,EAAIC,UAChBF,MAAK,SAAAG,GACJjB,EAAWiB,GACXnB,EAAS,IACToB,QAAQC,IAAIF,WAoCG,oBAAhBlB,EAAQG,KAChB,gCACD,sBAAKD,UAAU,eAAf,UACE,sBAAKA,UAAU,WAAf,UAA2BF,EAAQqB,KAAnC,KAA2CrB,EAAQsB,IAAIC,WAClD,qBAAKrB,UAAU,OAAf,SAnCe,SAACsB,GACnB,IAGEC,EAFO,CAAC,SAAU,SAAU,UAAW,YAAa,WAAY,SAAU,YAE/DD,EAAEE,UACbC,EAAOH,EAAEI,UACTC,EALW,CAAC,UAAW,WAAY,QAAS,QAAS,MAAO,OAAQ,OAAQ,SAAU,YAAa,UAAW,WAAY,YAK3GL,EAAEM,YACjBC,EAAOP,EAAEQ,cAEb,MAAM,GAAN,OAAUP,EAAV,YAAiBE,EAAjB,YAAyBE,EAAzB,YAAkCE,GA0BNE,CAAY,IAAIC,WAErC,sBAAKhC,UAAU,cAAf,UACE,sBAAKA,UAAU,OAAf,UACCiC,KAAKC,MAAMpC,EAAQG,KAAKC,MADzB,WAGD,qBAAKF,UAAU,UAAf,SAA0BF,EAAQA,QAAQ,GAAGG,aAGnC,qBAAKD,UAAU,QAAf,SACA,oBAAIA,UAAU,gBAAd,4CCzDLmC,EAZS,SAAAC,GAClBA,GAAeA,aAAuBC,UACxC,6BAAqBxB,MAAK,YAAkD,IAA/CyB,EAA8C,EAA9CA,OAAQC,EAAsC,EAAtCA,OAAQC,EAA8B,EAA9BA,OAAQC,EAAsB,EAAtBA,OAAQC,EAAc,EAAdA,QAC3DJ,EAAOF,GACPG,EAAOH,GACPI,EAAOJ,GACPK,EAAOL,GACPM,EAAQN,OCDdO,IAASC,OACP,cAAC,IAAMC,WAAP,UACE,cAAC,EAAD,MAEFC,SAASC,eAAe,SAE1BZ,M","file":"static/js/main.5838d806.chunk.js","sourcesContent":["import React, {useState} from 'react'\nimport {FaCloudSun} from 'react-icons/fa'\n\n\nconst api = {\n  key: \"69d2cd6693fe4c31f2f752536fd95b52\",\n  base: 'https://api.openweathermap.org/data/2.5/'\n}\n\nfunction App() {\n  const [query, setQuery] = useState('');\n  const [weather, setWeather] = useState('');\n  const search = evt => {\n    if (evt.key === \"Enter\") {\n      fetch(`${api.base}weather?q=${query}&units=metric&APPID=${api.key}`)\n        .then(res => res.json())\n        .then(result => {\n          setWeather(result);\n          setQuery('');\n          console.log(result);\n        });\n    }\n  }\n\n  const dateBuilder = (d) =>{\n    let months = [\"January\", \"February\", \"March\", \"April\", \"May\", \"June\", \"July\", \"August\", \"September\", \"October\", \"November\", \"December\"];\n  let days = [\"Sunday\", \"Monday\", \"Tuesday\", \"Wednesday\", \"Thursday\", \"Friday\", \"Saturday\"];\n\n  let day = days[d.getDay()];\n  let date = d.getDate();\n  let month = months[d.getMonth()];\n  let year = d.getFullYear();\n\n  return `${day} ${date} ${month} ${year}`\n  }\n\n  \n\n\nreturn(\n  \n  <div className={(typeof weather.main != \"undefined\") ?  ((weather.main.temp > 16) ? 'warm' : 'cold' ) : 'app' }>\n         \n      <div className=\"heading\">\n          Weather-App <FaCloudSun/>\n      </div>\n     <div className=\"search-box\">\n       <input type=\"text\" className=\"search-bar\" placeholder=\"Search Location..\"\n       onChange={e => setQuery(e.target.value)}\n       value={query}\n       onKeyPress={search}\n       ></input>\n     </div>\n            \n             \n{(typeof weather.main != \"undefined\"  ) ? (\n <div>\n<div className=\"location-box\">\n  <div className=\"location\">{weather.name}, {weather.sys.country}</div>\n       <div className=\"date\">{dateBuilder(new Date())}</div>\n        </div>\n         <div className=\"weather-box\">\n           <div className=\"temp\">\n           {Math.round(weather.main.temp)}Â°c\n          </div>\n          <div className=\"weather\">{weather.weather[0].main}</div>\n            </div>\n          </div>  \n               ) : (<div className=\"error\" >\n                    <h3 className=\"error-message\" >Please Enter A Location:</h3>\n\n               </div>)}\n    </div>\n              \n)\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\nreportWebVitals();\n"],"sourceRoot":""}